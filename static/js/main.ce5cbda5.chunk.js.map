{"version":3,"sources":["components/Header/index.js","components/Header/Header.jsx","components/Sidebar/index.js","components/Sidebar/Sidebar.jsx","components/WordPlate/index.js","components/WordPlate/WordPlate.jsx","components/WordsList/index.js","components/WordsList/WordsList.jsx","actions/actionProgress.js","containers/Home/Home.jsx","containers/Home/index.js","actions/actionAutoInput.js","containers/MyVocabulary/MyVocabulary.jsx","containers/MyVocabulary/index.js","components/TestPlate/index.js","components/TestPlate/TestPlate.jsx","actions/actionTest.js","containers/Tests/Tests.jsx","containers/Tests/index.js","components/NotFound/index.js","components/NotFound/NotFound.jsx","containers/App/index.js","containers/App/App.jsx","reducers/reducerProgress.js","words.js","reducers/reducerTest.js","reducers/reducerAutoInput.js","reducers/index.js","registerApplicationStore.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Sidebar","NavLink","exact","activeClassName","WordPlate","props","element","eng","ukr","definition","WordsList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextWords","_this$props","progress","learnedNewWord","wordsToLearn","getWordsToLearn","leftToLearn","scroll","scrollToTop","cloneProgress","markAsLearned","word","_this$cloneProgress","learned","includes","index","findIndex","item","splice","push","toast","info","words","num","Math","floor","random","length","numberToDisplay","indexes","Set","size","add","forEach","i","renderWords","map","Zoom_default","key","concat","onClick","components_WordPlate","cloneLearned","objectSpread","cloneLeftToLearn","class","Component","type","payload","Home","components_Header","components_Sidebar","components_WordsList","lib","position","autoClose","hideProgressBar","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","connect","state","dispatch","bindActionCreators","valueChange","value","onSuggestionsFetchRequested","onSuggestionsClear","suggestionsChoosed","MyVocabulary","getSuggestions","inputValue","trim","toLowerCase","inputLength","test","lang","filter","slice","getSuggestionValue","suggestion","renderSuggestion","handleInputChange","event","_ref","newValue","_ref2","onSuggestionsClearRequested","renderSearchInput","autoInput","inputProps","placeholder","onChange","dist_default","suggestions","renderScrollBtn","renderVocabularyWords","suggestionWord","TestPlate","checkTest","target","tests","correctAnswer","wrongAnswer","score","success","lives","error","renderPlate","_this$props2","startAgain","onKeyUp","Tests","getWord","learnedWords","components_TestPlate","NotFound","App","Switch","Route","path","component","initState","allReducers","combineReducers","arguments","undefined","action","setupStore","createStore","composeWithDevTools","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","es","store","applicationStore","BrowserRouter","containers_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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ACX,CACDF,IAAK,MACLC,IAAK,2BACLC,WAAY,iDACX,CACDF,IAAK,MACLC,IAAK,2BACLC,WAAY,8KACX,CACDF,IAAK,MACLC,IAAK,+DACLC,WAAY,8FACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,iCACX,CACDF,IAAK,OACLC,IAAK,uCACLC,WAAY,kIACX,CACDF,IAAK,OACLC,IAAK,2BACLC,WAAY,wFACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,wBACX,CACDF,IAAK,MACLC,IAAK,mDACLC,WAAY,uDACX,CACDF,IAAK,MACLC,IAAK,8FACLC,WAAY,mFACX,CACDF,IAAK,OACLC,IAAK,yDACLC,WAAY,iEACX,CACDF,IAAK,OACLC,IAAK,6CACLC,WAAY,qCACX,CACDF,IAAK,OACLC,IAAK,qBACLC,WAAY,iDACX,CACDF,IAAK,MACLC,IAAK,2BACLC,WAAY,wDACX,CACDF,IAAK,MACLC,IAAK,mDACLC,WAAY,2CACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,WACX,CACDF,IAAK,MACLC,IAAK,6CACLC,WAAY,kDACX,CACDF,IAAK,MACLC,IAAK,6CACLC,WAAY,mBACX,CACDF,IAAK,MACLC,IAAK,qBACLC,WAAY,gBACX,CACDF,IAAK,OACLC,IAAK,2BACLC,WAAY,6DACX,CACDF,IAAK,OACLC,IAAK,uCACLC,WAAY,4FACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,oDACX,CACDF,IAAK,MACLC,IAAK,6CACLC,WAAY,iFACX,CACDF,IAAK,MACLC,IAAK,6CACLC,WAAY,sFACX,CACDF,IAAK,MACLC,IAAK,iCACLC,WAAY,wEACX,CACDF,IAAK,OACLC,IAAK,2BACLC,WAAY,uDACX,CACDF,IAAK,SACLC,IAAK,6CACLC,WAAY,gGACX,CACDF,IAAK,OACLC,IAAK,qEACLC,WAAY,cACX,CACDF,IAAK,MACLC,IAAK,2BACLC,WAAY,wJACX,CACDF,IAAK,OACLC,IAAK,6CACLC,WAAY,gCACX,CACDF,IAAK,OACLC,IAAK,uCACLC,WAAY,iCACX,CACDF,IAAK,QACLC,IAAK,qBACLC,WAAY,2EACX,CACDF,IAAK,MACLC,IAAK,mDACLC,WAAY,gEACX,CACDF,IAAK,OACLC,IAAK,uCACLC,WAAY,+HACX,CACDF,IAAK,MACLC,IAAK,2BACLC,WAAY,kEACX,CACDF,IAAK,OACLC,IAAK,iCACLC,WAAY,4CACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,gCACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,wBACX,CACDF,IAAK,OACLC,IAAK,iCACLC,WAAY,oCACX,CACDF,IAAK,MACLC,IAAK,iCACLC,WAAY,yGACX,CACDF,IAAK,SACLC,IAAK,6CACLC,WAAY,sGACX,CACDF,IAAK,QACLC,IAAK,mDACLC,WAAY,sCACX,CACDF,IAAK,MACLC,IAAK,uCACLC,WAAY,eACX,CACDF,IAAK,OACLC,IAAK,uCACLC,WAAY,0FACX,CACDF,IAAK,MACLC,IAAK,iCACLC,WAAY,wBACX,CACDF,IAAK,MACLC,IAAK,iCACLC,WAAY,uEACX,CACDF,IAAK,OACLC,IAAK,iCACLC,WAAY,kFACX,CACDF,IAAK,QACLC,IAAK,qEACLC,WAAY,sEACX,CACDF,IAAK,SACLC,IAAK,iCACLC,WAAY,yDACX,CACDF,IAAK,OACLC,IAAK,iCACLC,WAAY,+HACX,CACDF,IAAK,QACLC,IAAK,uCACLC,WAAY,iGACX,CACDF,IAAK,UACLC,IAAK,iCACLC,WAAY,2FACX,CACDF,IAAK,SACLC,IAAK,mDACLC,WAAY,+DACX,CACDF,IAAK,WACLC,IAAK,mDACLC,WAAY,4GACX,CACDF,IAAK,YACLC,IAAK,yDACLC,WAAY,wBACX,CACDF,IAAK,YACLC,IAAK,mDACLC,WAAY,qGACX,CACDF,IAAK,QACLC,IAAK,6CACLC,WAAY,iCACX,CACDF,IAAK,YACLC,IAAK,mDACLC,WAAY,+IACX,CACDF,IAAK,YACLC,IAAK,iCACLC,WAAY,wBACX,CACDF,IAAK,QACLC,IAAK,yDACLC,WAAY,4DACX,CACDF,IAAK,OACLC,IAAK,mDACLC,WAAY,wHACX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","file":"static/js/main.ce5cbda5.chunk.js","sourcesContent":["import Header from './Header'\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n  <header className=\"app-header\">\r\n    <Link to=\"/dictionary\" className=\"header-title\">\r\n      <i className=\"fas fa-graduation-cap\"></i>\r\n      Learn n' Play\r\n    </Link>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import Sidebar from './Sidebar'\r\nexport default Sidebar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Sidebar.css';\r\n\r\nexport const Sidebar = () => {\r\n  return (\r\n    <aside className=\"sidebar-div\">\r\n      <nav className=\"sidebar-nav\">\r\n        <NavLink\r\n          exact to=\"/dictionary\"\r\n          className=\"sidebar-link\"\r\n          activeClassName=\"navLink-selected\"\r\n        ><i className=\"fas fa-language\" /> Learn</NavLink>\r\n        <NavLink\r\n          to=\"/dictionary/vocabulary\"\r\n          className=\"sidebar-link\"\r\n          activeClassName=\"navLink-selected\"\r\n        ><i className=\"fas fa-book-open\" /> Vocabluary</NavLink>\r\n        <NavLink\r\n          to=\"/dictionary/tests\"\r\n          className=\"sidebar-link\"\r\n          activeClassName=\"navLink-selected\"\r\n        ><i className=\"fas fa-medal\" /> Play</NavLink>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import WordPlate from './WordPlate'\r\nexport default WordPlate;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"./WordPlate.css\";\r\n\r\nconst WordPlate = props => {\r\n  const { element } = props;\r\n\r\n  return (\r\n    <div className=\"word-main\">\r\n      <p>word: {element.eng}</p>\r\n      <p>translation: {element.ukr}</p>\r\n      <p>definition: {element.definition}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nWordPlate.propTypes = {\r\n  element: PropTypes.object\r\n};\r\n\r\nexport default WordPlate;\r\n","import WordsList from './WordsList'\r\nexport default WordsList;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from \"react-toastify\";\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\n\r\nimport WordPlate from \"../WordPlate\";\r\n\r\nimport \"./WordsList.css\";\r\n\r\nclass WordsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { progress } = this.props;\r\n    const cloneLearned = progress.learned.map(item => ({ ...item }));\r\n    const cloneLeftToLearn = progress.leftToLearn.map(item => ({ ...item }));\r\n    this.wordsToLearn = this.getWordsToLearn(progress.leftToLearn);\r\n    this.cloneProgress = {\r\n      leftToLearn: cloneLeftToLearn,\r\n      learned: cloneLearned\r\n    };\r\n  }\r\n\r\n  nextWords = () => {\r\n    const { progress, learnedNewWord } = this.props;\r\n\r\n    this.wordsToLearn = this.getWordsToLearn(progress.leftToLearn);\r\n    scroll.scrollToTop();\r\n    learnedNewWord(this.cloneProgress);\r\n  }\r\n\r\n  markAsLearned = word => {\r\n    const { learnedNewWord } = this.props;\r\n    const { leftToLearn, learned } = this.cloneProgress;\r\n\r\n    if (!learned.includes(word)) {\r\n      const index = leftToLearn.findIndex(item => item.eng === word.eng);\r\n\r\n      leftToLearn.splice(index, 1);\r\n      learned.push(word);\r\n      toast.info('Added to vocabulary');\r\n      learnedNewWord(this.cloneProgress);\r\n    }\r\n  }\r\n\r\n  getWordsToLearn = words => {\r\n    const wordsToLearn = [];\r\n    const minWordsToDisplay = 10;\r\n    const num = Math.floor(Math.random() * words.length) + 1;\r\n    const numberToDisplay = num > minWordsToDisplay ? minWordsToDisplay : num;\r\n    const indexes = new Set();\r\n\r\n    while (indexes.size !== numberToDisplay) {\r\n      indexes.add(Math.floor(Math.random() * words.length));\r\n    };\r\n    indexes.forEach(i => {\r\n      return wordsToLearn.push(words[i]);\r\n    });\r\n    return wordsToLearn;\r\n  }\r\n\r\n  renderWords = () => {\r\n    return this.wordsToLearn.map(element => (\r\n      <Zoom key={`word-list-${element.eng}`}>\r\n        <button className=\"word-plate pointer\" onClick={() => { this.markAsLearned(element) }}>\r\n          <WordPlate element={element} />\r\n        </button>\r\n      </Zoom >\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { progress } = this.props;\r\n\r\n    if (!progress.leftToLearn.length) {\r\n      return (\r\n        <div className=\"notify-msg\">\r\n          <h1>Guess you learned all the words <i class=\"fas fa-award\"></i></h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className=\"div-words-plate\">\r\n            {this.renderWords()}\r\n          </div>\r\n          <div className=\"div-words-btn\">\r\n            <button className=\"btn-mark btn-next-words\" onClick={this.nextWords}>Next Words</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nWordsList.propTypes = {\r\n  learnedNewWord: PropTypes.func,\r\n  progress: PropTypes.object\r\n};\r\n\r\nexport default WordsList;","export const LEARNED_NEW_WORD = \"LEARNED_NEW_WORD\";\r\n\r\nexport const learnedNewWord = item => {\r\n  return {\r\n    type: LEARNED_NEW_WORD,\r\n    payload: item\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport SideBar from \"../../components/Sidebar\";\r\nimport WordsList from \"../../components/WordsList\";\r\nimport { learnedNewWord } from \"../../actions/actionProgress\";\r\n\r\n\r\nimport \"./Home.css\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { progress, learnedNewWord } = this.props;\r\n    const autoClose = 2500;\r\n    const rtl = false;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Header />\r\n        <div className=\"app-wrapper\">\r\n          <SideBar />\r\n          <main className=\"app-main\">\r\n            <WordsList progress={progress} learnedNewWord={learnedNewWord} />\r\n          </main>\r\n        </div>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={autoClose}\r\n          hideProgressBar\r\n          closeOnClick\r\n          rtl={rtl}\r\n          pauseOnVisibilityChange\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      learnedNewWord: learnedNewWord\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  learnedNewWord: PropTypes.func,\r\n  progress: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import Home from './Home'\r\nexport default Home;","export const VALUE_CHANGE = \"VALUE_CHANGE\";\r\nexport const SUGGESTION_FETCH = \"SUGGESTION_FETCH\";\r\nexport const SUGGESTION_CLEAR = \"SUGGESTION_CLEAR\";\r\nexport const SUGGESTION_CHOOSED = \"SUGGESTION_CHOOSED\";\r\n\r\nexport const valueChange = value => {\r\n  return {\r\n    type: VALUE_CHANGE,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const onSuggestionsFetchRequested = value => {\r\n  return {\r\n    type: SUGGESTION_FETCH,\r\n    payload: value\r\n  };\r\n};\r\n\r\nexport const onSuggestionsClear = () => {\r\n  return {\r\n    type: SUGGESTION_CLEAR,\r\n    payload: null\r\n  };\r\n};\r\n\r\nexport const suggestionsChoosed = value => {\r\n  return {\r\n    type: SUGGESTION_CHOOSED,\r\n    payload: value\r\n  };\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from 'prop-types';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport Header from \"../../components/Header\";\r\nimport SideBar from \"../../components/Sidebar\";\r\nimport WordPlate from \"../../components/WordPlate\";\r\nimport {\r\n  valueChange,\r\n  onSuggestionsFetchRequested,\r\n  onSuggestionsClear,\r\n  suggestionsChoosed\r\n} from '../../actions/actionAutoInput'\r\n\r\nimport \"./MyVocabulary.css\";\r\n\r\nclass MyVocabulary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.lang = '';\r\n  }\r\n\r\n  getSuggestions = (value, learned) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    const engDetection = /^[a-zA-Z]+$/;\r\n\r\n    if (engDetection.test(inputValue)) {\r\n      this.lang = 'eng';\r\n    } else {\r\n      this.lang = 'ukr'\r\n    }\r\n\r\n    return inputLength === 0 ? [] : learned.filter(lang =>\r\n      lang[this.lang].toLowerCase().slice(0, inputLength) === inputValue\r\n    );\r\n  };\r\n\r\n  getSuggestionValue = suggestion => {\r\n    const { suggestionsChoosed } = this.props;\r\n\r\n    suggestionsChoosed(suggestion);\r\n    return suggestion[this.lang];\r\n  };\r\n\r\n  renderSuggestion = suggestion => (\r\n    <span>{suggestion[this.lang]}</span>\r\n  );\r\n\r\n  handleInputChange = (event, { newValue }) => {\r\n    const { valueChange } = this.props;\r\n\r\n    valueChange(newValue);\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    const { onSuggestionsFetchRequested } = this.props;\r\n\r\n    const suggestions = this.getSuggestions(value, this.props.progress.learned);\r\n    onSuggestionsFetchRequested(suggestions);\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    return null;\r\n  }\r\n\r\n  renderSearchInput = (learned, autoInput, onSuggestionsClear) => {\r\n    const inputProps = {\r\n      placeholder: 'Search',\r\n      value: autoInput.value,\r\n      onChange: this.handleInputChange\r\n    };\r\n\r\n    if (learned.length) {\r\n      return (\r\n        <div className=\"div-input\">\r\n          <Autosuggest\r\n            suggestions={autoInput.suggestions}\r\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n            getSuggestionValue={this.getSuggestionValue}\r\n            renderSuggestion={this.renderSuggestion}\r\n            inputProps={inputProps}\r\n          />\r\n          <button className=\"btn-clear\" onClick={onSuggestionsClear}><i className=\"far fa-trash-alt\"></i></button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderScrollBtn = learned => {\r\n    const minWordsToScroll = 15;\r\n\r\n    if (learned.length < minWordsToScroll) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <Zoom>\r\n          <button className=\"scroll-plate\" onClick={scroll.scrollToTop}>\r\n            <i className=\"fas fa-arrow-circle-up\"></i>\r\n          </button>\r\n        </Zoom>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  renderVocabularyWords = learned => {\r\n    if (!learned.length) {\r\n      return (\r\n        <div className=\"notify-msg\">\r\n          <h1>Looks like you didn't learned anything</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return learned.map(element => (\r\n        <Zoom key={`vocabulary-list-${element.eng}`}>\r\n          <div className=\"word-plate\" >\r\n            <WordPlate element={element} />\r\n          </div>\r\n        </Zoom>\r\n      ));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { progress, autoInput, onSuggestionsClear } = this.props;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Header />\r\n        <div className=\"app-wrapper\">\r\n          <SideBar />\r\n          {this.renderScrollBtn(progress.learned)}\r\n          <main className=\"app-main\">\r\n            {this.renderSearchInput(progress.learned, autoInput, onSuggestionsClear)}\r\n            <div className=\"div-words-plate\">\r\n              {\r\n                autoInput.suggestionWord.length ?\r\n                  this.renderVocabularyWords(autoInput.suggestionWord) :\r\n                  this.renderVocabularyWords(progress.learned)\r\n              }\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    progress: state.progress,\r\n    autoInput: state.autoInput\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      valueChange: valueChange,\r\n      onSuggestionsFetchRequested: onSuggestionsFetchRequested,\r\n      onSuggestionsClear: onSuggestionsClear,\r\n      suggestionsChoosed: suggestionsChoosed\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nMyVocabulary.propTypes = {\r\n  progress: PropTypes.object,\r\n  autoInput: PropTypes.object,\r\n  valueChange: PropTypes.func,\r\n  onSuggestionsFetchRequested: PropTypes.func,\r\n  onSuggestionsClear: PropTypes.func,\r\n  suggestionsChoosed: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyVocabulary);\r\n","import MyVocabulary from './MyVocabulary'\r\nexport default MyVocabulary;","import TestPlate from './TestPlate'\r\nexport default TestPlate;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from \"react-toastify\";\r\nimport Zoom from 'react-reveal/Zoom';\r\n\r\nimport \"./TestPlate.css\";\r\n\r\nclass TestPlate extends Component {\r\n  checkTest = ({ key, target }, word) => {\r\n    const points = 100;\r\n    const lifePenalty = 1;\r\n\r\n    if (key === 'Enter' && target.value) {\r\n      const { tests, correctAnswer, wrongAnswer } = this.props;\r\n\r\n      if (target.value.trim().toLowerCase() === word.ukr) {\r\n        const score = tests.score + points;\r\n\r\n        target.value = '';\r\n        toast.success('Correct');\r\n        correctAnswer(score);\r\n      } else {\r\n        const lives = tests.lives - lifePenalty;\r\n\r\n        target.value = '';\r\n        toast.error('Wrong!');\r\n        wrongAnswer(lives);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderPlate = () => {\r\n    const { word, tests, startAgain } = this.props;\r\n    const minLives = 0;\r\n\r\n    if (tests.lives === minLives) {\r\n      return (\r\n        <div className=\"test-plate test-sumup\">\r\n          <div className=\"test-sumup-info\">\r\n            <p>your score</p>\r\n            <p>{tests.score}</p>\r\n          </div>\r\n          <button className=\"test-btn\" onClick={startAgain}>start again</button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"test-plate\">\r\n          <div className=\"test-info\">\r\n            <p className=\"test-score\">score: {tests.score}</p>\r\n            <p className=\"test-lives\">lives: {tests.lives}</p>\r\n          </div>\r\n          <p className=\"test-task\">Entrer correct translation</p>\r\n          <div className=\"test-desc\">\r\n            <p>{word.eng}</p>\r\n            <div>\r\n              <input type=\"text\" className=\"test-input\" onKeyUp={(event) => this.checkTest(event, word)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { progress } = this.props;\r\n    const minAmountOfWords = 10;\r\n\r\n    if (progress.learned.length < minAmountOfWords)\r\n      return (\r\n        <div className=\"notify-msg\">\r\n          <h1>Learn at least {minAmountOfWords} words</h1>\r\n          <h2>{minAmountOfWords - progress.learned.length} words left to learn</h2>\r\n        </div>\r\n      );\r\n    else {\r\n      return (\r\n        <Zoom>\r\n          {this.renderPlate()}\r\n        </Zoom>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nTestPlate.propTypes = {\r\n  word: PropTypes.object,\r\n  progress: PropTypes.object,\r\n  tests: PropTypes.object,\r\n  correctAnswer: PropTypes.func,\r\n  wrongAnswer: PropTypes.func,\r\n  startAgain: PropTypes.func\r\n};\r\n\r\nexport default TestPlate;\r\n","export const CORRECT_ANSWER = \"CORRECT_ANSWER\";\r\nexport const WRONG_ANSWER = \"WRONG_ANSWER\";\r\nexport const START_AGAIN = \"START_AGAIN\";\r\n\r\nexport const correctAnswer = score => {\r\n  return {\r\n    type: CORRECT_ANSWER,\r\n    payload: score\r\n  };\r\n};\r\n\r\nexport const wrongAnswer = lives => {\r\n  return {\r\n    type: WRONG_ANSWER,\r\n    payload: lives\r\n  };\r\n};\r\n\r\nexport const startAgain = () => {\r\n  return {\r\n    type: START_AGAIN,\r\n    payload: null\r\n  };\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport SideBar from \"../../components/Sidebar\";\r\nimport TestPlate from \"../../components/TestPlate\";\r\nimport { correctAnswer, wrongAnswer, startAgain } from \"../../actions/actionTest\";\r\n\r\nimport \"./Tests.css\";\r\n\r\nclass Tests extends Component {\r\n  getWord = (learnedWords) => {\r\n    const index = Math.floor(Math.random() * learnedWords.length);\r\n    return learnedWords[index];\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      progress,\r\n      tests,\r\n      correctAnswer,\r\n      wrongAnswer,\r\n      startAgain\r\n    } = this.props;\r\n    const autoClose = 2500;\r\n    const rtl = false;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Header />\r\n        <div className=\"app-wrapper\">\r\n          <SideBar />\r\n          <main className=\"app-main\">\r\n            <TestPlate\r\n              word={this.getWord(progress.learned)}\r\n              progress={progress}\r\n              tests={tests}\r\n              correctAnswer={correctAnswer}\r\n              wrongAnswer={wrongAnswer}\r\n              startAgain={startAgain}\r\n            />\r\n          </main>\r\n        </div>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={autoClose}\r\n          hideProgressBar\r\n          closeOnClick\r\n          rtl={rtl}\r\n          pauseOnVisibilityChange\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    progress: state.progress,\r\n    tests: state.tests\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      correctAnswer: correctAnswer,\r\n      wrongAnswer: wrongAnswer,\r\n      startAgain: startAgain\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nTests.propTypes = {\r\n  progress: PropTypes.object,\r\n  tests: PropTypes.object,\r\n  correctAnswer: PropTypes.func,\r\n  wrongAnswer: PropTypes.func,\r\n  startAgain: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tests);\r\n","import Tests from './Tests'\r\nexport default Tests;","import NotFound from './NotFound'\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./NotFound.css\";\r\n\r\nconst NotFound = () => (\r\n  <div className=\"not-found-div\">\r\n    <h1>Not found :(</h1>\r\n    <p>Sorry, but the page you were trying to view does not exist.</p>\r\n    <div className=\"not-found-sign\">404</div>\r\n    <div>\r\n      <Link to=\"/dictionary\" className=\"not-found-link\">Return to home page</Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import App from './App'\r\nexport default App;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"../Home\";\nimport MyVocabulary from \"../MyVocabulary\";\nimport Tests from \"../Tests\";\nimport NotFound from \"../../components/NotFound\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/dictionary\" component={Home} />\n    <Route path=\"/dictionary/vocabulary\" component={MyVocabulary} />\n    <Route path=\"/dictionary/tests\" component={Tests} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default App;","import words from '../words';\r\nimport { LEARNED_NEW_WORD } from \"../actions/actionProgress\";\r\n\r\nconst initState = {\r\n  leftToLearn: words,\r\n  learned: []\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case LEARNED_NEW_WORD:\r\n      return { ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};","const words = [\r\n  {\r\n    eng: 'ace',\r\n    ukr: 'туз',\r\n    definition: 'a playing card with a single spot on it, ranked as the highest card in its suit in most card games'\r\n  }, {\r\n    eng: 'ant',\r\n    ukr: 'мураха',\r\n    definition: 'a small insect typically having a sting and living in a complex social colony with one or more breeding queens'\r\n  }, {\r\n    eng: 'ape',\r\n    ukr: 'мавпа',\r\n    definition: 'a large primate that lacks a tail, including the gorilla, chimpanzees, orangutan, and gibbons'\r\n  }, {\r\n    eng: 'arm',\r\n    ukr: 'мураха',\r\n    definition: 'each of the two upper limbs of the human body from the shoulder to the hand'\r\n  }, {\r\n    eng: 'asp',\r\n    ukr: 'гадюка',\r\n    definition: 'a small southern European viper with an upturned snout'\r\n  }, {\r\n    eng: 'ball',\r\n    ukr: 'м\\'яч',\r\n    definition: 'a solid or hollow spherical or egg-shaped object that is kicked, thrown, or hit in a game'\r\n  }, {\r\n    eng: 'bat',\r\n    ukr: 'битка',\r\n    definition: 'an implement with a handle and a solid surface, typically of wood, used for hitting the ball in games'\r\n  }, {\r\n    eng: 'bed',\r\n    ukr: 'ліжко',\r\n    definition: 'a piece of furniture for sleep or rest, typically a framework with a mattress'\r\n  }, {\r\n    eng: 'bell',\r\n    ukr: 'дзвін',\r\n    definition: 'a hollow metal object, typically in the shape of a deep inverted cup widening at the lip, that sounds a clear musical note when struck, especially by means of a clapper inside'\r\n  }, {\r\n    eng: 'bin',\r\n    ukr: 'відро для сміття',\r\n    definition: 'a receptacle in which to deposit rubbish'\r\n  }, {\r\n    eng: 'cab',\r\n    ukr: 'таксі',\r\n    definition: 'a taxi'\r\n  }, {\r\n    eng: 'cat',\r\n    ukr: 'кіт',\r\n    definition: 'a small domesticated carnivorous mammal with soft fur, a short snout, and retractile claws'\r\n  }, {\r\n    eng: 'cup',\r\n    ukr: 'чашка',\r\n    definition: 'a small bowl-shaped container for drinking from, typically having a handle'\r\n  }, {\r\n    eng: 'cry',\r\n    ukr: 'плакати',\r\n    definition: 'shed tears in distress, pain, or sorrow'\r\n  }, {\r\n    eng: 'corner',\r\n    ukr: 'куток',\r\n    definition: 'a place or angle where two sides or edges meet'\r\n  }, {\r\n    eng: 'dad',\r\n    ukr: 'тато',\r\n    definition: 'one\\'s father'\r\n  }, {\r\n    eng: 'deer',\r\n    ukr: 'олень',\r\n    definition: 'a hoofed grazing or browsing animal, with branched bony antlers that are shed annually and typically borne only by the male'\r\n  }, {\r\n    eng: 'dig',\r\n    ukr: 'копати',\r\n    definition: 'break up and move earth with a tool'\r\n  }, {\r\n    eng: 'dip',\r\n    ukr: 'опускати',\r\n    definition: 'put or let something down quickly'\r\n  }, {\r\n    eng: 'dog',\r\n    ukr: 'собака',\r\n    definition: 'a domesticated carnivorous mammal that typically has a long snout, an acute sense of smell, non-retractile claws, and a barking, howling, or whining voice'\r\n  }, {\r\n    eng: 'ear',\r\n    ukr: 'вухо',\r\n    definition: 'the organ of hearing'\r\n  }, {\r\n    eng: 'eat',\r\n    ukr: 'їсти',\r\n    definition: 'consume food'\r\n  }, {\r\n    eng: 'eye',\r\n    ukr: 'око',\r\n    definition: 'an organs of sight'\r\n  }, {\r\n    eng: 'egg',\r\n    ukr: 'яйце',\r\n    definition: 'an oval or round object laid by a female bird'\r\n  }, {\r\n    eng: 'elf',\r\n    ukr: 'ельф',\r\n    definition: 'a supernatural creature of folk tales, typically represented as a small, delicate, elusive figure in human form with pointed ears, magical powers, and a capricious nature'\r\n  }, {\r\n    eng: 'fan',\r\n    ukr: 'вентилятор',\r\n    definition: 'an apparatus with rotating blades that creates a current of air for cooling or ventilation'\r\n  }, {\r\n    eng: 'far',\r\n    ukr: 'далеко',\r\n    definition: 'over a large expanse of space'\r\n  }, {\r\n    eng: 'fire',\r\n    ukr: 'вогонь',\r\n    definition: 'a process in which substances combine chemically with oxygen from the air and typically give out bright light, heat, and smoke'\r\n  }, {\r\n    eng: 'fish',\r\n    ukr: 'риба',\r\n    definition: 'a limbless cold-blooded vertebrate animal with gills and fins living wholly in water'\r\n  }, {\r\n    eng: 'fly',\r\n    ukr: 'літати',\r\n    definition: 'move through the air'\r\n  }, {\r\n    eng: 'gap',\r\n    ukr: 'проміжок',\r\n    definition: 'a break or hole in an object or between two objects'\r\n  }, {\r\n    eng: 'gem',\r\n    ukr: 'коштовний камінь',\r\n    definition: 'a precious or semi-precious stone, especially when cut and polished or engraved'\r\n  }, {\r\n    eng: 'gift',\r\n    ukr: 'подарунок',\r\n    definition: 'a thing given willingly to someone without payment; a present'\r\n  }, {\r\n    eng: 'girl',\r\n    ukr: 'дівчина',\r\n    definition: 'a young or relatively young woman'\r\n  }, {\r\n    eng: 'game',\r\n    ukr: 'гра',\r\n    definition: 'an activity that one engages in for amusement'\r\n  }, {\r\n    eng: 'hay',\r\n    ukr: 'сіно',\r\n    definition: 'grass that has been mown and dried for use as fodder'\r\n  }, {\r\n    eng: 'hug',\r\n    ukr: 'обіймати',\r\n    definition: 'squeeze (someone) tightly in one\\'s arms'\r\n  }, {\r\n    eng: 'hag',\r\n    ukr: 'відьма',\r\n    definition: 'a witch'\r\n  }, {\r\n    eng: 'hat',\r\n    ukr: 'капелюх',\r\n    definition: 'a shaped covering for the head worn for warmth'\r\n  }, {\r\n    eng: 'hop',\r\n    ukr: 'скакати',\r\n    definition: 'move by jumping'\r\n  }, {\r\n    eng: 'ice',\r\n    ukr: 'лід',\r\n    definition: 'frozen water'\r\n  }, {\r\n    eng: 'idea',\r\n    ukr: 'ідея',\r\n    definition: 'a thought or suggestion as to a possible course of action'\r\n  }, {\r\n    eng: 'item',\r\n    ukr: 'деталь',\r\n    definition: 'an individual article or unit, especially one that is part of a list, collection, or set'\r\n  }, {\r\n    eng: 'inn',\r\n    ukr: 'готель',\r\n    definition: 'a house providing accommodation, food, and drink'\r\n  }, {\r\n    eng: 'ink',\r\n    ukr: 'чорнило',\r\n    definition: 'a coloured fluid or paste used for writing, drawing, printing, or duplicating'\r\n  }, {\r\n    eng: 'jam',\r\n    ukr: 'варення',\r\n    definition: 'a sweet spread or conserve made from fruit and sugar boiled to a thick consistency'\r\n  }, {\r\n    eng: 'jar',\r\n    ukr: 'банка',\r\n    definition: 'a wide-mouthed cylindrical container made of glass, metal or pottery'\r\n  }, {\r\n    eng: 'jeep',\r\n    ukr: 'джип',\r\n    definition: 'a small, sturdy motor vehicle with four-wheel drive'\r\n  }, {\r\n    eng: 'jungle',\r\n    ukr: 'джунглі',\r\n    definition: 'an area of land overgrown with dense forest and tangled vegetation, typically in the tropics'\r\n  }, {\r\n    eng: 'join',\r\n    ukr: 'приєднатися',\r\n    definition: 'to connect'\r\n  }, {\r\n    eng: 'key',\r\n    ukr: 'ключ',\r\n    definition: 'a small piece of shaped metal with incisions cut to fit the wards of a particular lock, which is inserted into a lock and turned to open or close it'\r\n  }, {\r\n    eng: 'keep',\r\n    ukr: 'тримати',\r\n    definition: 'have or retain possession of'\r\n  }, {\r\n    eng: 'king',\r\n    ukr: 'король',\r\n    definition: 'ruler of an independent state'\r\n  }, {\r\n    eng: 'knife',\r\n    ukr: 'ніж',\r\n    definition: 'an instrument composed of a blade fixed into a handle, used for cutting'\r\n  }, {\r\n    eng: 'kit',\r\n    ukr: 'комплект',\r\n    definition: 'a set of articles or equipment needed for a specific purpose'\r\n  }, {\r\n    eng: 'leaf',\r\n    ukr: 'листок',\r\n    definition: 'a flattened structure of a higher plant, typically green and blade-like, that is attached to a stem directly or via a stalk'\r\n  }, {\r\n    eng: 'leg',\r\n    ukr: 'нога',\r\n    definition: 'each of the limbs on which a person or animal walks and stands'\r\n  }, {\r\n    eng: 'long',\r\n    ukr: 'довго',\r\n    definition: 'lasting or taking a great amount of time'\r\n  }, {\r\n    eng: 'log',\r\n    ukr: 'журнал',\r\n    definition: 'an official record of events'\r\n  }, {\r\n    eng: 'lid',\r\n    ukr: 'кришка',\r\n    definition: 'move through the air'\r\n  }, {\r\n    eng: 'mail',\r\n    ukr: 'пошта',\r\n    definition: 'letters and parcels sent by post'\r\n  }, {\r\n    eng: 'map',\r\n    ukr: 'карта',\r\n    definition: 'a diagrammatic representation of an area of land or sea showing physical features, cities, roads, etc'\r\n  }, {\r\n    eng: 'matter',\r\n    ukr: 'матерія',\r\n    definition: '(in physics) that which occupies space and possesses rest mass, especially as distinct from energy'\r\n  }, {\r\n    eng: 'major',\r\n    ukr: 'важливий',\r\n    definition: 'important, serious, or significant'\r\n  }, {\r\n    eng: 'mug',\r\n    ukr: 'кружка',\r\n    definition: 'a large cup'\r\n  }, {\r\n    eng: 'nest',\r\n    ukr: 'гніздо',\r\n    definition: 'a structure or place made or chosen by a bird for laying eggs and sheltering its young'\r\n  }, {\r\n    eng: 'net',\r\n    ukr: 'сітка',\r\n    definition: 'an entrapping device'\r\n  }, {\r\n    eng: 'nut',\r\n    ukr: 'горіх',\r\n    definition: 'a fruit consisting of a hard or tough shell around an edible kernel'\r\n  }, {\r\n    eng: 'node',\r\n    ukr: 'вузол',\r\n    definition: 'a point in a network or diagram at which lines or pathways intersect or branch'\r\n  }, {\r\n    eng: 'noble',\r\n    ukr: 'благородний',\r\n    definition: 'having or showing fine personal qualities or high moral principles'\r\n  }, {\r\n    eng: 'window',\r\n    ukr: 'вікно',\r\n    definition: 'a transparent panel on an envelope to show an address'\r\n  }, {\r\n    eng: 'wind',\r\n    ukr: 'вітер',\r\n    definition: 'the perceptible natural movement of the air, especially in the form of a current of air blowing from a particular direction'\r\n  }, {\r\n    eng: 'wheel',\r\n    ukr: 'колесо',\r\n    definition: 'one of the round parts underneath a car, wagon, etc., that rolls and allows something to move'\r\n  }, {\r\n    eng: 'whistle',\r\n    ukr: 'свист',\r\n    definition: 'a small device that makes a very high and loud sound when a person blows air through it'\r\n  }, {\r\n    eng: 'wisdom',\r\n    ukr: 'мудрість',\r\n    definition: 'knowledge that is gained by having many experiences in life'\r\n  }, {\r\n    eng: 'xenolith',\r\n    ukr: 'ксеноліт',\r\n    definition: ' a fragment of rock differing in origin, composition, structure, etc, from the igneous rock enclosing it'\r\n  }, {\r\n    eng: 'xylograph',\r\n    ukr: 'ксилограф',\r\n    definition: 'an engraving on wood'\r\n  }, {\r\n    eng: 'xylophone',\r\n    ukr: 'ксилофон',\r\n    definition: 'a musical instrument that has a set of wooden bars of different lengths that are hit with hammers'\r\n  }, {\r\n    eng: 'xerox',\r\n    ukr: 'ксерокс',\r\n    definition: 'a xerographic copying process'\r\n  }, {\r\n    eng: 'xenophobe',\r\n    ukr: 'ксенофоб',\r\n    definition: 'a person who is fearful or contemptuous of that which is foreign, especially of strangers or of people from different countries or cultures'\r\n  }, {\r\n    eng: 'yesterday',\r\n    ukr: 'вчора',\r\n    definition: 'the day before today'\r\n  }, {\r\n    eng: 'youth',\r\n    ukr: 'молодість',\r\n    definition: 'the time when a young person has not yet become an adult'\r\n  }, {\r\n    eng: 'yell',\r\n    ukr: 'крикнути',\r\n    definition: 'to say (something) very loudly especially because you are angry, surprised, or are trying to get someone\\'s attention'\r\n  }, {\r\n    eng: 'yard',\r\n    ukr: 'двір',\r\n    definition: 'an outdoor area that is next to a house and is usually covered by grass'\r\n  }, {\r\n    eng: 'yacht',\r\n    ukr: 'яхта',\r\n    definition: 'any of various relatively small, streamlined sailing or motor-driven vessels used for pleasure cruises or racing'\r\n  }, {\r\n    eng: 'zombie',\r\n    ukr: 'зомбі',\r\n    definition: 'a will-less and speechless human held to have died and been supernaturally reanimated'\r\n  }, {\r\n    eng: 'zodiac',\r\n    ukr: 'зодіак',\r\n    definition: 'eavens centered on the ecliptic that encompasses the apparent paths of all the planets and is divided into 12 constellations or signs each taken for astrological purposes to extend 30 degrees of longitude'\r\n  }, {\r\n    eng: 'zoo',\r\n    ukr: 'зоопарк',\r\n    definition: 'a place where animals are kept for public exhibition'\r\n  }, {\r\n    eng: 'zero',\r\n    ukr: 'нуль',\r\n    definition: 'the arithmetical symbol 0 or 0̸ denoting the absence of all magnitude or quantity'\r\n  }, {\r\n    eng: 'zone',\r\n    ukr: 'зона',\r\n    definition: 'an area or stretch of land having a particular characteristic, purpose, or use, or subject to particular restrictions'\r\n  },\r\n];\r\n\r\nexport default words;\r\n","import { CORRECT_ANSWER, WRONG_ANSWER, START_AGAIN } from \"../actions/actionTest\";\r\n\r\nconst initState = {\r\n  lives: 3,\r\n  score: 0\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case CORRECT_ANSWER:\r\n      return { ...state, score: action.payload };\r\n    case WRONG_ANSWER:\r\n      return { ...state, lives: action.payload };\r\n    case START_AGAIN:\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  VALUE_CHANGE,\r\n  SUGGESTION_FETCH,\r\n  SUGGESTION_CLEAR,\r\n  SUGGESTION_CHOOSED\r\n} from \"../actions/actionAutoInput\";\r\n\r\nconst initState = {\r\n  value: '',\r\n  suggestions: [],\r\n  suggestionWord: []\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case VALUE_CHANGE:\r\n      return { ...state, value: action.payload };\r\n    case SUGGESTION_FETCH:\r\n      return { ...state, suggestions: action.payload };\r\n    case SUGGESTION_CHOOSED:\r\n      const suggestionWord = [];\r\n\r\n      suggestionWord.push(action.payload);\r\n      return { ...state, suggestionWord: suggestionWord };\r\n    case SUGGESTION_CLEAR:\r\n      return initState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from \"redux\";\r\nimport reducerProgress from \"./reducerProgress\";\r\nimport reducerTest from \"./reducerTest\";\r\nimport reducerAutoInput from \"./reducerAutoInput\";\r\n\r\nconst allReducers = combineReducers({\r\n  progress: reducerProgress,\r\n  tests: reducerTest,\r\n  autoInput: reducerAutoInput\r\n});\r\n\r\nexport default allReducers;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport allReducers from \"./reducers/index\";\r\n\r\nconst setupStore = () => {\r\n  return createStore(\r\n    allReducers,\r\n    composeWithDevTools()\r\n  );\r\n}\r\n\r\nexport default setupStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, } from 'react-router-dom';\n\nimport App from './containers/App';\nimport applicationStore from './registerApplicationStore';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={applicationStore()}>\n      <Router>\n          <App />\n      </Router>\n  </Provider>, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}